from dotenv import load_dotenv
import os
import sys
import pandas as pd
import requests

"""
pip install pandas
pip install python-dotenv
pip install requests



https://www.abuseipdb.com/register
1. Create account
2. Go to API
3. Select Create Key
4. Choose a name
5. Copy the key and save it in a safe place
"""

# Load the environment variables
load_dotenv()
api_key = os.getenv("API_KEY")

# URL to check the IP from AbusedIPDB
url = "https://api.abuseipdb.com/api/v2/check"

def check_ip(ip):
    # Headers to send to the API
    headers = {
        "Key": api_key,
        "Accept": "application/json"
    }

    # Parameters to send to the API
    params = {
        "ipAddress": ip,
        "maxAgeInDays": 90,
        "verbose": "True"
    }

    try:
        # Call the API to check the IP
        response = requests.get(url, headers=headers, params=params)
        data = response.json()
        
        results = [{"score" : data["data"]["abuseConfidenceScore"]}, 
                   {"country" : data["data"]["countryName"]}, 
                   {"isp" : data["data"]["isp"]}, 
                   {"domain" : data["data"]["domain"]}, 
                   {"usage" : data["data"]["usageType"]}]

        return results
    except Exception as e:
        print(f"An error occured: {e}")
        return
    
    
def check_ips(data):
    # Get the name of the first column 
    first_column = data.columns[0]

    # Apply function to every element in the column 
    data["AbuseIPDB"] = data[first_column].apply(check_ip)

    return data

def read_csv(file):
    try:
        # Read the file and return the data (only read the first column and use the first row as header)
        data = pd.read_csv(file, header=0)
        return data
    except FileNotFoundError:
        print("File not found. Please check the path and try again.")
        return
    except Exception as e:
        print(f"An error occured: {e}")
        return
    
def write_csv(data, file):
    try:
        # Write the data to the file
        data.to_csv(file, index=False)
        print("File written successfully.")
    except Exception as e:
        print(f"An error occured: {e}")
        return
    

def main():
    # Check if the correct number of arguments is passed
    if len(sys.argv) != 2:
        print("Use: python3 abusedip.py <file.csv>")
    else:
        # Argument in position 1 is the file to read
        file = sys.argv[1]

        # Call the function to read the file
        data = read_csv(file)

        # If the data is not None, call the function to check the IPs
        if data is not None:
            print("File read successfully.")
            print("Checking IPs...")
            data = check_ips(data)
        
        if data is not None:
            print("IPs checked successfully!!!")
            write_csv(data, file)


if __name__ == "__main__":
    main()



